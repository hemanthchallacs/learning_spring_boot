package com.elearning.spring.controllers;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.elearning.spring.entities.Admin;
import com.elearning.spring.entities.Course;
import com.elearning.spring.entities.Enrolled;
import com.elearning.spring.entities.User;
import com.elearning.spring.repo.AdminRepository;
import com.elearning.spring.repo.CourseRepository;

public class AdminController {

	@Autowired
	private AdminRepository adminRepo;
	@Autowired
	private CourseRepository courseRepo;
	
	@RequestMapping(value = "/adminlogin", method = RequestMethod.GET)	
	public ModelAndView getloginForm() {
		
		ModelAndView mav = new ModelAndView("adminlogin");
		mav.addObject("loginuser", new Admin());
		return mav;
		
	}
	
	@RequestMapping(value = "/adminloginUser", method = RequestMethod.POST)
	public String loginUser(@ModelAttribute Admin loginuser) {
		
		
		try {
			Admin retUser = adminRepo.findById(loginuser.getAdmin_id()).get();
			
			System.out.println(loginuser.getAdmin_id());
			System.out.println(loginuser.getPassword());
			if(retUser.getPassword().equals(loginuser.getPassword()))
			{	CoreController.setCurradmin(loginuser);
				return "redirect:/AdminDashboard";
			}
			else
				return "welcome";
		}
		catch(Exception e)
		{
			System.out.println("Couldnt login");
			return "welcome";
		}
		
		
	}
	
	@RequestMapping(value = "/adminlogout", method = RequestMethod.GET)	
	public String logout() {
		
		CoreController.setCurradmin(null);
		return "redirect:/";
		
	}
	
	@RequestMapping(value = "/AdminDashboard", method = RequestMethod.GET)
	public ModelAndView adminDashboardt()
	{

		Admin curradmin  = CoreController.getCurradmin();
		
		ModelAndView mav = new ModelAndView("AdminDashboard");
		List<Course> courses = courseRepo.findAll();
		
		
		mav.addObject("courses", courses);
		return mav;
		
	}

}
